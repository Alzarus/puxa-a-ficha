services:
  db:
    build:
      context: .
      dockerfile: ./postgresql/Dockerfile.db
      args:
        POSTGRES_USER: "prod_username"
        POSTGRES_PASSWORD: "prod_password"
        POSTGRES_DB: "puxa_a_ficha_prod"
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USERNAME: prod_username
      DB_PASSWORD: prod_password
      DB_DATABASE: puxa_a_ficha_prod
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d puxa_a_ficha_prod -U prod_username"]
      interval: 15s
      timeout: 5s
      retries: 6
    restart: unless-stopped

  api:
    build:
      context: ./api-go
      dockerfile: Dockerfile
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USERNAME: "prod_username"
      DB_PASSWORD: "prod_password"
      DB_DATABASE: "puxa_a_ficha_prod"
      BROKER_URL: "amqp://puxa-a-ficha:ficha-a-puxa@broker"
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "3000:3000"
    volumes:
      - ./api-go:/app
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://api:3000/api/v1/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  validate-user-worker:
    build:
      context: ./validate-user-worker
      dockerfile: Dockerfile
    environment:
      BROKER_URL: "amqp://puxa-a-ficha:ficha-a-puxa@broker"
      DB_HOST: db
      DB_PORT: 5432
      DB_USERNAME: "prod_username"
      DB_PASSWORD: "prod_password"
      DB_DATABASE: "puxa_a_ficha_prod"
    depends_on:
      broker:
        condition: service_healthy
      api:
        condition: service_healthy
    restart: unless-stopped
    command: ["./validate-user-worker"]

  crawlers:
    build:
      context: .
      dockerfile: ./crawlers/Dockerfile
    environment:
      WORKER_COUNT: 4
      BROKER_URL: "amqp://puxa-a-ficha:ficha-a-puxa@broker"
    depends_on:
      api:
        condition: service_healthy
      broker:
        condition: service_healthy
    volumes:
      - ./crawlers:/app/crawlers
      - /app/crawlers/node_modules
      - /app/crawlers/.npm:/root/.npm
      - shared_data:/app/crawlers # Volume compartilhado entre crawlers e json-processor
      - ./crawlers/logs:/app/crawlers/logs
    restart: unless-stopped
    command: ["/bin/bash", "/app/crawlers/run-crawlers.sh"]

  json-processor:
    build:
      context: ./json-processor-go
      dockerfile: Dockerfile
    environment:
      BROKER_URL: "amqp://puxa-a-ficha:ficha-a-puxa@broker"
    depends_on:
      api:
        condition: service_healthy
      broker:
        condition: service_healthy
    volumes:
      - ./crawlers:/app/crawlers # Diretório de entrada para JSON
      - ./json-processor-go/logs:/app/logs # Diretório de logs
    restart: unless-stopped

  broker:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: puxa-a-ficha
      RABBITMQ_DEFAULT_PASS: ficha-a-puxa
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

volumes:
  db_data:
  shared_data:
