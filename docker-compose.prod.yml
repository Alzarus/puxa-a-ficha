services:
  db:
    image: postgres:13
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    env_file:
      - .env.production
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  api:
    build: ./api
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_DATABASE: ${DB_DATABASE}
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "3000:3000"
    volumes:
      - ./api:/app
    env_file:
      - .env.production

  crawlers:
    build:
      context: ./crawlers
      dockerfile: Dockerfile
    depends_on:
      - api
    volumes:
      - ./crawlers:/app/crawlers
      - /app/crawlers/node_modules
      - /app/crawlers/.npm:/root/.npm
      - shared_data:/app/crawlers # Volume compartilhado entre crawlers e json-processor
    env_file:
      - .env.production

  json-processor:
    build:
      context: ./json-processor
      dockerfile: Dockerfile
    depends_on:
      - crawlers
      - api
    volumes:
      - ./json-processor:/app/json-processor
      - shared_data:/app/crawlers
    env_file:
      - .env.production

volumes:
  db_data:
  shared_data:
